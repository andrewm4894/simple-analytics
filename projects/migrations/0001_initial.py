# Generated by Django 5.2.6 on 2025-09-08 14:09

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('api_key', models.CharField(editable=False, max_length=64, unique=True)),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=1000, help_text='Maximum events per minute allowed for this project', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100000)])),
                ('retention_days', models.PositiveIntegerField(default=90, help_text='Number of days to retain raw event data', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3650)])),
                ('aggregation_retention_days', models.PositiveIntegerField(default=365, help_text='Number of days to retain aggregated data', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3650)])),
                ('cors_allowed_origins', models.JSONField(default=list, help_text="List of allowed origins for CORS, or ['*'] for all")),
                ('sampling_enabled', models.BooleanField(default=False)),
                ('sampling_rate', models.FloatField(default=1.0, help_text='Sampling rate (0.0-1.0). 0.1 = 10% of events, 1.0 = 100% (no sampling)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('sampling_strategy', models.CharField(choices=[('random', 'Random sampling'), ('deterministic', 'Deterministic sampling (based on user_id hash)'), ('time_window', 'Time window sampling (sample within time periods)')], default='random', help_text='Strategy for event sampling', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(blank=True, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'projects',
            },
        ),
        migrations.CreateModel(
            name='EventSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('rate_limit_per_minute', models.PositiveIntegerField(blank=True, help_text='Optional rate limit override for this source', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10000)])),
                ('sampling_enabled', models.BooleanField(blank=True, help_text='Override project sampling settings (null = inherit from project)', null=True)),
                ('sampling_rate', models.FloatField(blank=True, help_text='Source-specific sampling rate override', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('sampling_strategy', models.CharField(blank=True, choices=[('random', 'Random sampling'), ('deterministic', 'Deterministic sampling (based on user_id hash)'), ('time_window', 'Time window sampling (sample within time periods)')], help_text='Source-specific sampling strategy override', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_event_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_sources', to='projects.project')),
            ],
            options={
                'db_table': 'event_sources',
            },
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['api_key'], name='projects_api_key_c7f915_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['owner', 'created_at'], name='projects_owner_i_eab97e_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['is_active'], name='projects_is_acti_3457d5_idx'),
        ),
        migrations.AddIndex(
            model_name='eventsource',
            index=models.Index(fields=['project', 'is_active'], name='event_sourc_project_f08060_idx'),
        ),
        migrations.AddIndex(
            model_name='eventsource',
            index=models.Index(fields=['project', 'name'], name='event_sourc_project_34cd2a_idx'),
        ),
        migrations.AddIndex(
            model_name='eventsource',
            index=models.Index(fields=['last_event_at'], name='event_sourc_last_ev_f625be_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventsource',
            unique_together={('project', 'name')},
        ),
    ]
